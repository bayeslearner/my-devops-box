# {{ ansible_managed }}
# Nginx vhost configuration with production settings for rgsupv-core
server {
    listen 80;
    listen 443 ssl http2 default_server;
    server_name {{ nginx_name | default('api.rg-supervision.com') }};
    root {{ nginx_root | default('/opt/rgsupv-core/current/public/') }};
   
    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    # Letsencrypt
    location /.well-known/ {
        proxy_pass http://{{ nginx_well_known_ip | default('192.168.200.30') }}/.well-known/ ;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/var/run/php/php{{ php_default_version_debian }}-fpm.sock; # defined in group_vars
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        include fastcgi_params;
        fastcgi_param HTTPS on;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible
    location ~ \.php$ {
        return 404;
    }
    
    location = /favicon.ico { access_log off; log_not_found off; }
      
    # Logs
    error_log /var/log/nginx/api-ssl-error.log;
    access_log /var/log/nginx/api-ssl-access.log combined_ssl;

    # SSL
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_certificate {{ nginx_ssl_certificate_path }};
    ssl_certificate_key {{ nginx_ssl_certificate_key_path }};
    #ssl_trusted_certificate {{ nginx_ssl_trusted_certificate_path }};
}