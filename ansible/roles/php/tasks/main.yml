---
- name: APT | ensure librdkafka is not installed
  find:
    paths: /usr/local/lib
    patterns: 'librdkafka*'
  register: librdkafka_result

# - debug: "var=librdkafka_result"

- name: APT | install librdkafka if it is not found and host does not belong to group 'web'
  include_tasks: install-librdkafka.yml
  when:
    - "'web' not in group_names"
    - librdkafka_result.matched < 1
  tags: [ 'packages' ]

- name: APT | install freetds
  apt:
    package: "{{ freetds_pkgs }}"
    state: present
  tags: [ 'packages' ]

- name: APT | configure freetds driver for pdo_dblib
  template: 
    src: freetds.ini.j2
    dest: /etc/freetds/freetds.conf
    owner: root
    group: root
    mode: 0644

- name: APT | download Cassandra C++ drivers
  get_url: 
    url: "{{ item }}"
    dest: "/tmp"
  with_items: "{{ cassandra_urls }}"
  tags: [ 'packages' ]

- name: APT | downgrade libssl-dev for debian/stretch hosts (required for cassandra-cpp-drivers)
  include_tasks: install-libssl.yml
  when:
    - ansible_facts['distribution'] is match("Debian")
    - ansible_facts['distribution_release'] is match("stretch")
  tags: [ 'packages' ]

- name: APT | install Cassandra C++ drivers
  apt:
    deb: "/tmp/{{ item }}"
  loop: "{{ cassandra_pkgs }}"
  tags: [ 'packages' ]

- name: PHP | install php packages and configure php.ini and opcache settings
  import_role:
    name: geerlingguy.php
  tags: [ 'packages' ]
  
- name: PECL | update channel
  command: "pecl channel-update pecl.php.net"
  register: pecl_update
  changed_when: "'up to date' in pecl_update.stdout_lines"

# - debug: "var=pecl_update"

# - name: PECL | install and enable propro, raph, http, oauth via script
#   script: "files/scripts/php-http.sh"
#   register: http_result
#   changed_when: "'successfully installed pecl_http' in http_result.stdout" # changed when script echo'ed the expected string
#   failed_when: http_result.rc == 1 # failed when script's return code is 1

# - debug: "var=http_result"

# - name: PECL | install and enable librdkafka c++ driver and php rdkafka via script
#   script: "files/scripts/php-rdkafka.sh {{ librdkafka_version }}"
#   register: rdkafka_result
#   changed_when: "'successfully installed rdkafka' in http_result.stdout"
#   failed_when: http_result.rc == 1 # failed when script's return code is 1

# - debug: "var=rdkafka_result"

- name: PECL | install extensions
  shell: "yes '' | pecl install {{ item }}"
  register: pecl_result
  changed_when: pecl_result is succeeded
  failed_when: "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))"
  with_items: "{{ php_pecl_extensions_install }}" # defined in group_vars 

- name: PECL | copy extensions .ini files
  template: 
    src: extension.ini.j2
    dest: /etc/php/{{ php_default_version_debian }}/mods-available/{{ item }}.ini
    owner: root
    group: root
    mode: 0644
  with_items: "{{ php_pecl_extensions_files }}" # defined in group_vars 

- name: PECL | override default configuration for xdebug
  template: 
    src: xdebug.ini.j2
    dest: /etc/php/{{ php_default_version_debian }}/mods-available/xdebug.ini
    owner: root
    group: root
    mode: 0644

- name: PECL | override default configuration for apc
  template: 
    src: apcu.ini.j2
    dest: /etc/php/{{ php_default_version_debian }}/mods-available/apcu.ini
    owner: root
    group: root
    mode: 0644

- name: PECL | enable extensions using phpenmod
  shell: phpenmod {{ item }}
  loop: "{{ php_pecl_extensions_enable }}" # defined in group_vars 
  register: item
  changed_when: "item.stdout_lines == ''"
  failed_when: "item.stderr != ''"

- name: PHP | install composer
  import_role:
    name: geerlingguy.composer
