---
- name: APT | ensure librdkafka is not installed
  find:
    paths: /usr/local/lib
    patterns: 'librdkafka*'
  register: librdkafka_result
  tags: [ 'packages' ]

# - debug: "var=librdkafka_result"

- name: APT | install librdkafka if it is not found and host does not belong to group 'web'
  include_tasks: install-librdkafka.yml
  when:
    - "'web' not in group_names"
    - librdkafka_result.matched < 1
  tags: [ 'packages' ]

- name: APT | install freetds
  apt:
    package: "{{ freetds_pkgs }}"
    state: present
  when:
    - "'web' not in group_names"
  tags: [ 'packages' ]

- name: APT | configure freetds driver for pdo_dblib
  template: 
    src: freetds.ini.j2
    dest: /etc/freetds/freetds.conf
    owner: root
    group: root
    mode: 0644
  when:
    - "'web' not in group_names"
  tags: [ 'packages' ]

- name: APT | ensure cassandra c++ driver is not installed
  find:
    paths: /usr/lib/x86_64-linux-gnu/
    recurse: true
    patterns: '*cassandra*'
  register: cassandra_cpp_result
  tags: [ 'packages' ]

# - debug: "var=cassandra_cpp_result"

- name: APT | install cassandra c++ driver if it is not found
  include_tasks: install-cassandra-cpp.yml
  when:
    - cassandra_cpp_result.matched < 1
  tags: [ 'packages' ]

- name: PHP | install php packages, configure opcache and php.ini
  import_role:
    name: geerlingguy.php
  tags: [ 'php' ]

- name: PHP | check for cassandra php driver
  find:
    paths: /usr/lib/php/
    recurse: true
    patterns: 'cassandra*'
  register: cass_php_output
  tags: [ 'php' ]

# - debug: "var=cass_php_output"

- name: PHP | download and compile cassandra php driver if it is not found
  include_tasks: install-cassandra-php.yml
  when:
    - cass_php_output.matched < 1
  tags: [ 'php' ]

- name: PHP | update pecl channel
  command: "pecl channel-update pecl.php.net"
  register: pecl_update
  changed_when: "'up to date' in pecl_update.stdout_lines"
  tags: [ 'php' ]

- name: PHP | install pecl extensions
  shell: "yes '' | pecl install {{ item }}"
  register: pecl_result
  changed_when: pecl_result is succeeded
  failed_when: "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))"
  with_items: "{{ php_pecl_extensions_install }}" # defined in group_vars 
  tags: [ 'php' ]

- name: PHP | copy extensions .ini files
  template: 
    src: extension.ini.j2
    dest: /etc/php/{{ php_default_version_debian }}/mods-available/{{ item }}.ini
    owner: root
    group: root
    mode: 0644
  with_items: "{{ php_extensions_files }}" # defined in group_vars 
  tags: [ 'php' ]

- name: PHP | override default configuration for xdebug
  template: 
    src: xdebug.ini.j2
    dest: /etc/php/{{ php_default_version_debian }}/mods-available/xdebug.ini
    owner: root
    group: root
    mode: 0644
  tags: [ 'php' ]

- name: PHP | disable xdebug by default for production
  shell: phpdismod xdebug
  register: output
  changed_when: "output.stdout_lines == ''"
  failed_when: "output.stderr != ''"
  tags: [ 'php' ]

- name: PHP | enable extensions using phpenmod
  shell: phpenmod {{ item }}
  loop: "{{ php_extensions_enable }}" # defined in group_vars 
  register: output
  changed_when: "output.stdout_lines == ''"
  failed_when: "output.stderr != ''"
  tags: [ 'php' ]

- name: PHP | ensure realpath_cache_ttl is set in .ini files
  lineinfile:
    path: "{{ item }}/php.ini"
    regexp: '^realpath_cache_ttl = .*'
    line: 'realpath_cache_ttl = {{ php_realpath_cache_ttl }}'
    insertafter: '^realpath_cache_size'
    state: present
  with_items: "{{ php_conf_paths }}"
  notify: restart webserver 
  tags: [ 'php' ]
