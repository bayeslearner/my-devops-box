# -*- mode: ruby -*-
# vi: set ft=ruby :

config_file = "app.yaml"
# config_file = "postgres.yaml"

VAGRANTFILE_API_VERSION ||= "2"
Vagrant.require_version '>= 2.2.7'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  if !Vagrant.has_plugin?("vagrant-hostmanager")
    puts "Vagrant plugin vagrant-hostmanager must be installed!"
    abort
  else
    config.hostmanager.manage_host = true
    config.hostmanager.manage_guest = true
  end

  # Allow SSH Agent Forward from The Box
  config.ssh.forward_agent = true
  config.ssh.insert_key = false
  config.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key"]

  if !File.exists?(File.join(File.dirname(__FILE__), config_file))
    puts "The YAML config file is missing!"
    abort
  end
  
  vars = YAML.load_file(File.join(File.dirname(__FILE__), config_file))
  ansible_pubkey_path = File.expand_path(vars['ansible_pubkey_path'])
  ansible_privkey_path = File.expand_path(vars['ansible_privkey_path'])

  if !File.exists?(ansible_pubkey_path) || !File.exists?(ansible_privkey_path)
    puts "Provided SSH keypair paths could not be resolved!"
    abort
  end

  servers = vars['servers']
  
  if !servers || servers.empty?
    puts "No servers defined in #{config_file} !"
    abort
  end
  
  # VMs
  servers.each do |srv|
    config.vm.define srv['name'] do |i|
      i.vm.box = srv['box']
      i.vm.box_version = srv['box_version']
      i.vm.hostname = srv['hostname'] ||= srv['name']
      i.vm.network "private_network", ip: srv['ip']
      i.vm.provider 'virtualbox' do |vb|
        vb.gui = false
        vb.name = srv['name']
        vb.customize ['modifyvm', :id, '--cpus', srv['cpus']]
        vb.customize ['modifyvm', :id, '--memory', srv['memory']]
        vb.customize ['modifyvm', :id, '--ostype', 'Debian_64']
        vb.customize ['modifyvm', :id, '--natdnsproxy1', 'on']
        vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
      end
    end
  end

  config.vm.provision 'apt packages', type: 'shell' do |s|
    s.inline = <<-SHELL
      apt-get update
      apt-get install -y dos2unix telnet
    SHELL
  end

  config.vm.provision 'install python interpreter', type: 'shell', path: 'scripts/python.sh'

  config.vm.provision 'copy ssh keys', type: 'shell', run: 'once' do |s| 
    s.path = 'scripts/common.sh'
    s.privileged = false
    s.env = {
      "ANSIBLE_PRIVKEY_CONTENT" => File.read(ansible_privkey_path),
      "ANSIBLE_PRIVKEY_NAME" => ansible_privkey_path.split('/').last,
      "ANSIBLE_PUBKEY_CONTENT" => File.read(ansible_pubkey_path)
    }
  end

  # after triggers 
  config.trigger.after :up, :destroy do |trigger|
    trigger.name = "vagrant-hostmanager"
    trigger.info = "Updating hosts configuration!"
    trigger.run = { inline: "vagrant hostmanager" }
  end
end
